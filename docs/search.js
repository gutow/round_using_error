window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "round_using_error", "modulename": "round_using_error", "kind": "module", "doc": "<p><a href=\"#introduction\">Introduction</a> | <a href=\"#install-using-pip\">Install</a> | \n<a href=\"#default-usage\">Default Usage</a> | \n<a href=\"#adjusting-significant-figures-on-error\">Adjusting # of Significant Figures on Error</a>\n | <a href=\"#adjusting-the-cutoffs-for-switching-to-scientific-notation\">Adjusting cutoffs for switch to scientific notation</a>\n| <a href=\"#render-latex-in-jupyter\">Render Latex in Jupyter</a> | \n<a href=\"#get-rounded-numbers-for-the-value-and-error\">Get Rounded Numbers Instead of Strings</a> | \n<a href=\"#issues-or-comments\">Comments and Bug Reporting</a> | <a href=\"#change-log\">Change Log</a>\n | <a href=\"#this-software-is-distributed-under-the-gnu-v3-license\">License</a></p>\n\n<h1 id=\"round-using-error\">Round Using Error</h1>\n\n<h2 id=\"introduction\">Introduction</h2>\n\n<p>This package provides opinionated tools for formatting the output of values \nwith known errors. The general format is <code>value +/- error</code>. The values are \nrounded so that the last digit reported for the value is the same order of \nmagnitude as the least significant digit reported on the error. The default \nis to report the error to two significant figures. The opinionated \npart is that the output switches automatically from decimal to scientific \nnotation. Scientific notation is used for values &lt; 0.1 and &gt; 1000. Where the\nswitch occurs can be changed with optional parameters.</p>\n\n<p>The output is available as:</p>\n\n<ul>\n<li>tuple of strings (value, error, power_of_ten);</li>\n<li>text in format <code>value +/- error</code>;</li>\n<li>latex in the form <code>value \\pm error</code>.</li>\n<li>rounded floating point numbers (value, error)</li>\n</ul>\n\n<h2 id=\"usage\">Usage</h2>\n\n<h3 id=\"install-using-pip\">Install using pip</h3>\n\n<p><code>pip install -U round_using_error</code>.</p>\n\n<h3 id=\"default-usage\">Default usage:</h3>\n\n<pre><code>&gt;&gt;&gt; from round_using_error import *\n&gt;&gt;&gt; rndwitherr(0.001234, 0.000241)\n('1.23', '0.24', '-3')\n&gt;&gt;&gt; rndwitherr(1299.845, 0.124)\n('1.29985', '0.00012', '3')\n&gt;&gt;&gt; text_rndwitherr(1299.845, 0.124)\n'(1.29985 +/- 0.00012) X 10^3'\n&gt;&gt;&gt; latex_rndwitherr(1299.845, 0.124)\n'(1.29985\\\\pm0.00012)\\\\times 10^{3}'\n&gt;&gt;&gt; rndwitherr(0.001234, 0.000241)\n('1.23', '0.24', '-3')\n&gt;&gt;&gt; text_rndwitherr(0.001234, 0.000241)\n'(1.23 +/- 0.24) X 10^-3'\n&gt;&gt;&gt; latex_rndwitherr(0.001234, 0.000241)\n'(1.23\\\\pm0.24)\\\\times 10^{-3}'\n&gt;&gt;&gt; rndwitherr(0.1234, 0.024)\n('0.123', '0.024', '')\n&gt;&gt;&gt; text_rndwitherr(0.1234, 0.024)\n'0.123 +/- 0.024'\n&gt;&gt;&gt; latex_rndwitherr(0.1234, 0.024)\n'0.123\\\\pm0.024'\n</code></pre>\n\n<h3 id=\"adjusting-significant-figures-on-error\">Adjusting significant figures on error</h3>\n\n<pre><code>&gt;&gt;&gt; from round_using_error import *\n&gt;&gt;&gt; latex_rndwitherr(0.1234, 0.024)\n'0.123\\\\pm0.024'\n&gt;&gt;&gt; rndwitherr(0.001234, 0.000241, errdig = 1)\n('1.2', '0.2', '-3')\n&gt;&gt;&gt; rndwitherr(0.001234, 0.000241, errdig = 3)\n('1.234', '0.241', '-3')\n&gt;&gt;&gt; text_rndwitherr(0.001234, 0.000241, errdig = 3)\n'(1.234 +/- 0.241) X 10^-3'\n&gt;&gt;&gt; latex_rndwitherr(0.001234, 0.000241, errdig = 3)\n'(1.234\\\\pm0.241)\\\\times 10^{-3}'\n</code></pre>\n\n<h3 id=\"adjusting-the-cutoffs-for-switching-to-scientific-notation\">Adjusting the cutoffs for switching to scientific notation</h3>\n\n<pre><code>&gt;&gt;&gt; rndwitherr(1247.325, 1.23, errdig = 1, highmag = 3)\n('1247', '1', '')\n&gt;&gt;&gt; rndwitherr(3.53e-2,2.24e-3, errdig = 1, lowmag = -2)\n('0.035', '0.002', '')\n</code></pre>\n\n<h3 id=\"render-latex-in-jupyter\">Render Latex in Jupyter</h3>\n\n<p><img src=\"https://raw.githubusercontent.com/gutow/round_using_error/master/rndwitherr_Jupyter_display.png\" alt=\"latex in Jupyter\" /></p>\n\n<h3 id=\"get-rounded-numbers-for-the-value-and-error\">Get Rounded Numbers for the Value and Error</h3>\n\n<p>It is possible to get floating point numbers rounded as done by this package\nrather than string representations, using the function <code>numbers_rndwitherr()</code>.\nHowever, because of the way floating point numbers are printed, they may not\ndisplay with proper significant figures (see below). Use the \nfunctions described above that return strings to guarantee proper\nsignificant figures.</p>\n\n<pre><code>&gt;&gt;&gt; numbers_rndwitherr(0.002345,0.0072)\n(0.002, 0.007)\n&gt;&gt;&gt; numbers_rndwitherr(2.345864,0.0072)\n(2.3459, 0.0072)\n&gt;&gt;&gt; numbers_rndwitherr(2.345864e-3,0.0072e-2)\n(0.002346, 7.2e-05)\n&gt;&gt;&gt; numbers_rndwitherr(83e-4, 0)\n(0.0083, 0)\n</code></pre>\n\n<h4 id=\"specifying-number-of-error-digits\">Specifying number of error digits</h4>\n\n<pre><code>&gt;&gt;&gt; numbers_rndwitherr(1247.325, 1.23, errdig = 3)\n(1247.33, 1.23)\n</code></pre>\n\n<h4 id=\"default-floating-point-display-may-not-give-proper-significant-figures\">Default floating point display may not give proper significant figures.</h4>\n\n<p>Compare the output of <code>numbers_rndwitherr</code> and <code>rndwitherr</code>.</p>\n\n<pre><code>&gt;&gt;&gt; numbers_rndwitherr(1247.325, 1.23, errdig = 1) # bad\n(1247.0, 1.0)\n&gt;&gt;&gt; rndwitherr(1247.325, 1.23, errdig = 1, highmag = 3) # good\n('1247', '1', '')\n</code></pre>\n\n<h2 id=\"issues-or-comments\">Issues or Comments</h2>\n\n<p>Ideas, suggestions, bug reports and general comments are welcome . Please\nuse the github repository issues tracker:\n<a href=\"https://github.com/gutow/round_using_error/issues\">https://github.com/gutow/round_using_error/issues</a>.</p>\n\n<h2 id=\"change-log\">Change Log</h2>\n\n<ul>\n<li>1.2.0 Introduced <code>numbers_rndwitherr()</code> function. Readme.md and docs updates.</li>\n<li>1.1.1 More doctests. Tweaked handling of errors larger than values.</li>\n<li>1.1.0 Increased error checking. Now raises warning for negative error \nvalues. Also fixes an error that occurred with  negative values.</li>\n</ul>\n\n<h2 id=\"this-software-is-distributed-under-the-gnu-v3-licensehttpsgnuorglicenses\"><a href=\"https://gnu.org/licenses\">This software is distributed under the GNU V3 license</a></h2>\n\n<p>This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.</p>\n\n<p>Copyright - Jonathan Gutow, 2021, 2022.</p>\n"}, {"fullname": "round_using_error.round_using_error", "modulename": "round_using_error.round_using_error", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "round_using_error.round_using_error.numbers_rndwitherr", "modulename": "round_using_error.round_using_error", "qualname": "numbers_rndwitherr", "kind": "function", "doc": "<p>Returns rounded floating points for <code>value</code> and <code>error</code>.</p>\n\n<p>This function duplicates how numbers are round internally. It is\navailable if you want rounded numbers rather than formatted and properly\ntruncated strings. Be aware that because of the way floating point numbers\nare printed, this may not dispaly proper significant figures when output.\nUse the functions that return strings to guarantee good significant figures.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>value: float\n    The value in floating point.</p>\n\n<p>error: float\n    The error/uncertainty in floating point.</p>\n\n<p>errdig: int, optional\n    The number of digits to keep in the error. The value is rounded to the\n    least significant digit kept for the error. (default value = 2).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>value: float\n    The value rounded based on the error.</p>\n\n<p>error: float\n    The error/uncertainty rounded to the number of digits requested by\n    errdig.</p>\n\n<h1 id=\"examples\">Examples</h1>\n\n<h2 id=\"default\">Default</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numbers_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">0.002345</span><span class=\"p\">,</span><span class=\"mf\">0.0072</span><span class=\"p\">)</span>\n<span class=\"go\">(0.002, 0.007)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numbers_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">2.345864</span><span class=\"p\">,</span><span class=\"mf\">0.0072</span><span class=\"p\">)</span>\n<span class=\"go\">(2.3459, 0.0072)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numbers_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">2.345864e-3</span><span class=\"p\">,</span><span class=\"mf\">0.0072e-2</span><span class=\"p\">)</span>\n<span class=\"go\">(0.002346, 7.2e-05)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numbers_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">83e-4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">(0.0083, 0)</span>\n</code></pre>\n</div>\n\n<h2 id=\"specifying-number-of-error-digits\">Specifying number of error digits</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numbers_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">1247.325</span><span class=\"p\">,</span> <span class=\"mf\">1.23</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">(1247.33, 1.23)</span>\n</code></pre>\n</div>\n\n<h2 id=\"default-floating-point-display-may-not-give-proper-significant-figures\">Default floating point display may not give proper significant figures.</h2>\n\n<p>Compare the output of <code>numbers_rndwitherr</code> and <code>rndwitherr</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numbers_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">1247.325</span><span class=\"p\">,</span> <span class=\"mf\">1.23</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># bad</span>\n<span class=\"go\">(1247.0, 1.0)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">1247.325</span><span class=\"p\">,</span> <span class=\"mf\">1.23</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">highmag</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"c1\"># good</span>\n<span class=\"go\">(&#39;1247&#39;, &#39;1&#39;, &#39;&#39;)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">error</span>, </span><span class=\"param\"><span class=\"n\">errdig</span><span class=\"o\">=</span><span class=\"mi\">2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "round_using_error.round_using_error.rndwitherr", "modulename": "round_using_error.round_using_error", "qualname": "rndwitherr", "kind": "function", "doc": "<p>Return strings that can be used to represent reasonably rounded\nnumbers with errors.</p>\n\n<p>This is similar in functionality to the error rounding function of the\npackage <a href=\"https://github.com/drakegroup/sigfig\">sigfig</a>. The difference\nis that it also switches between decimal notaton and scientific\nnotation in an automatic manner. The default is the author's personal\nopinion of when this switch is done by most students. Decimal notation\nis used for numbers in the range 0.1 to 1000 by default. Outside this\nrange the number is provided in scientific notation. Where this switch\noccurs can be set by optional parameters.</p>\n\n<p>The <code>sigfig</code> package is not used to avoid doing the exponent analysis for\nthe switch between decimal and scientific notation twice. This also\navoids having to convert strings to numbers.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>value: float\n    The value to be rounded.</p>\n\n<p>error: float\n    The error in the value to be rounded.</p>\n\n<p>errdig: int, optional\n    (default = 2) number of significant figures to keep on the error.\n    The value is rounded to the least significant digit in the error.</p>\n\n<p>lowmag: int, optional\n    (default = -1) magnitude below which scientific notation is used.</p>\n\n<p>highmag: int, optional\n    (default = 2) magnitude above which scientific notation is used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>valuestr: str\n    rounded value.</p>\n\n<p>errstr: str\n    rounded error.</p>\n\n<p>pwroftenstr: str\n    string for scientific notation exponent. Empty string if values\n    returned as decimals.</p>\n\n<h1 id=\"examples\">Examples</h1>\n\n<h2 id=\"default\">Default</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">round_using_error</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">12.345</span><span class=\"p\">,</span> <span class=\"mf\">0.23</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;12.35&#39;, &#39;0.23&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">983.4</span><span class=\"p\">,</span> <span class=\"mi\">34</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;983&#39;, &#39;34&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">1247.325</span><span class=\"p\">,</span> <span class=\"mf\">1.23</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;1.2473&#39;, &#39;0.0012&#39;, &#39;3&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">0.2345</span><span class=\"p\">,</span> <span class=\"mf\">0.0125</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;0.234&#39;, &#39;0.013&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">0.0353</span><span class=\"p\">,</span> <span class=\"mf\">0.00224</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;3.53&#39;, &#39;0.22&#39;, &#39;-2&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.353e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;3.35&#39;, &#39;0.22&#39;, &#39;-2&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;3.53&#39;, &#39;0.22&#39;, &#39;-2&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">83e-4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;8.300000000000&#39;, &#39;0.000000000000&#39;, &#39;-3&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mf\">0.00034</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;-2.00000&#39;, &#39;0.00034&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.00034</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;0.00000&#39;, &#39;0.00034&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3452</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;0&#39;, &#39;3500&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">0.011</span><span class=\"p\">,</span><span class=\"mf\">0.034</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;1&#39;, &#39;3&#39;, &#39;-2&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">0.011</span><span class=\"p\">,</span><span class=\"mf\">0.34</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;1&#39;, &#39;34&#39;, &#39;-2&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">0.11</span><span class=\"p\">,</span><span class=\"mf\">0.34</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;0.1&#39;, &#39;0.3&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">34</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;1&#39;, &#39;34&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3437</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;1&#39;, &#39;3437&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"mi\">3437</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;10&#39;, &#39;3440&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mi\">1222</span><span class=\"p\">,</span><span class=\"mi\">343789</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;1&#39;, &#39;344&#39;, &#39;3&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.00034</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  <span class=\"c\">...</span>\n<span class=\"gr\">ValueError</span>: <span class=\"n\">Errors are expected to be &gt;= 0.</span>\n</code></pre>\n</div>\n\n<h2 id=\"adjusting-the-significant-digits-on-errors\">Adjusting the significant digits on errors</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">1247.325</span><span class=\"p\">,</span> <span class=\"mf\">1.23</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;1.24733&#39;, &#39;0.00123&#39;, &#39;3&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">1247.325</span><span class=\"p\">,</span> <span class=\"mf\">1.23</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;1.247&#39;, &#39;0.001&#39;, &#39;3&#39;)</span>\n</code></pre>\n</div>\n\n<h2 id=\"adjusting-the-cutoffs-for-switching-to-scientific-notation\">Adjusting the cutoffs for switching to scientific notation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">1247.325</span><span class=\"p\">,</span> <span class=\"mf\">1.23</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">highmag</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;1247&#39;, &#39;1&#39;, &#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">lowmag</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">(&#39;0.035&#39;, &#39;0.002&#39;, &#39;&#39;)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">error</span>, </span><span class=\"param\"><span class=\"n\">errdig</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">lowmag</span><span class=\"o\">=-</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">highmag</span><span class=\"o\">=</span><span class=\"mi\">2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "round_using_error.round_using_error.output_rndwitherr", "modulename": "round_using_error.round_using_error", "qualname": "output_rndwitherr", "kind": "function", "doc": "<p>This method outputs the results of rndwitherr as a string. Accepts the\nsame input as the method <code>rndwitherr()</code> and an additional optional\nparameter <code>style = \"latex\" or \"text\"</code> defining the output style of the\nreturned string.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>value: float</p>\n\n<p>error: float</p>\n\n<p>errdig: int, optional, default = 2</p>\n\n<p>lowmag: int, optional, default = -1</p>\n\n<p>highmag: int, optional, default = 2</p>\n\n<p>style: str, optional, default = 'latex', alternative 'text'</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>String representation of the value +/- the error properly rounded and in\nthe format specified by <code>style</code>.</p>\n\n<h1 id=\"examples\">Examples</h1>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;(3.53\\\\pm0.22)\\\\times 10^{-2}&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">,</span> <span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;text&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;(3.53 +/- 0.22) X 10^-2&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">lowmag</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;text&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;(3.5 +/- 0.2) X 10^-2&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">lowmag</span><span class=\"o\">=-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;text&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;0.035 +/- 0.002&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">lowmag</span><span class=\"o\">=-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;string&quot;</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  <span class=\"c\">...</span>\n<span class=\"gr\">ValueError</span>: <span class=\"n\">style parameter must be either &quot;latex&quot; or &quot;text&quot;.</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">error</span>, </span><span class=\"param\"><span class=\"n\">errdig</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">lowmag</span><span class=\"o\">=-</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">highmag</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s1\">&#39;latex&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "round_using_error.round_using_error.latex_rndwitherr", "modulename": "round_using_error.round_using_error", "qualname": "latex_rndwitherr", "kind": "function", "doc": "<p>This is a convenience function to render the output of <code>rndwitherr()</code>\nas a latex string. Equivalent to a call to <code>output_rndwitherr()</code> with the\nstyle = \"latex\"`.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>value: float</p>\n\n<p>error: float</p>\n\n<p>errdig: int, optional, default = 2</p>\n\n<p>lowmag: int, optional, default = -1</p>\n\n<p>highmag: int, optional, default = 2</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>String for latex representation of rounded value +/- error.</p>\n\n<h1 id=\"examples\">Examples</h1>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">latex_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">lowmag</span><span class=\"o\">=-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;0.035\\\\pm0.002&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">latex_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;(3.53\\\\pm0.22)\\\\times 10^{-2}&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">latex_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">1247.325</span><span class=\"p\">,</span> <span class=\"mf\">1.23</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;(1.2473\\\\pm0.0012)\\\\times 10^{3}&#39;</span>\n</code></pre>\n</div>\n\n<p>To view typeset latex output in Jupyter use:</p>\n\n<pre><code>from IPython.display import Math\nMath(latex_rndwitherr(value, error))\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">error</span>, </span><span class=\"param\"><span class=\"n\">errdig</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">lowmag</span><span class=\"o\">=-</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">highmag</span><span class=\"o\">=</span><span class=\"mi\">2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "round_using_error.round_using_error.text_rndwitherr", "modulename": "round_using_error.round_using_error", "qualname": "text_rndwitherr", "kind": "function", "doc": "<p>This is a convenience function to render the output of <code>rndwitherr()</code>\nas a text string. Equivalent to a call to <code>output_rndwitherr()</code> with the\nstyle = \"text\".</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>value: float</p>\n\n<p>error: float</p>\n\n<p>errdig: int, optional, default = 2</p>\n\n<p>lowmag: int, optional, default = -1</p>\n\n<p>highmag: int, optional, default = 2</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>String representation of rounded value +/- error.</p>\n\n<h1 id=\"examples\">Examples</h1>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">text_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">,</span> <span class=\"n\">errdig</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">lowmag</span><span class=\"o\">=-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;0.035 +/- 0.002&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">text_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">3.53e-2</span><span class=\"p\">,</span><span class=\"mf\">2.24e-3</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;(3.53 +/- 0.22) X 10^-2&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">text_rndwitherr</span><span class=\"p\">(</span><span class=\"mf\">1247.325</span><span class=\"p\">,</span> <span class=\"mf\">1.23</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;(1.2473 +/- 0.0012) X 10^3&#39;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">error</span>, </span><span class=\"param\"><span class=\"n\">errdig</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">lowmag</span><span class=\"o\">=-</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">highmag</span><span class=\"o\">=</span><span class=\"mi\">2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();